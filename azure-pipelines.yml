# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  - main

# TODO: Replace the agent pool name
pool: myAgentPool

variables:
  # TODO: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: "myServiceConnection"

  # TODO: Specify the value of the existing Web App name
  webAppName: "myappenis12"

  # Environment name
  environmentName: "udacity-app-service"

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        pool: myAgentPool
        steps:
          - script: |
              export PATH=$HOME/.local/bin:$PATH
              python3 -m pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "myStep 1"
            
          - script: sudo apt-get install -y zip
            displayName: "Install zip utility"
          
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(projectRoot)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true
              
          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "myStep 5 - Upload package"
            artifact: drop

  - stage: Deploy
    displayName: 'Deploy WebApp'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool: myAgentPool
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:    
                - task: AzureWebApp@1
                  displayName: 'Deploy Azure Web App'
                  inputs:
                    azureSubscription: $(azureServiceConnectionId)
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    appType: webApp
                    
          
